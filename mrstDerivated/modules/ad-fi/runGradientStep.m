function grad = runGradientStep(G, rock, fluid, schedule, lSF, system, varargin)


opt = struct('Verbose',    mrstVerbose, ...
    'writeOutput',         false, ...
    'outputName',          'adjoint', ...
    'outputNameFunc',      [], ...
    'simOutputName',       'state', ...
    'simOutputNameFunc',   [], ...
    'ForwardStates',       [], ...
    'ControlVariables',    [],...
    'scaling',             [],... /// unused
    'xRightSeeds',         [],...
    'uRightSeeds',         [],...
    'fwdJac',[]);

opt = merge_options(opt, varargin{:});


nAdj = size(lSF(1),1);
nFwd = size(opt.xRightSeeds,2);


if (nFwd > nAdj )
    grad = runAdjointADI(G, rock, fluid, schedule, lSF, system, varargin{:})';
else
    grad = runForwardADI(G, rock, fluid, schedule, lSF, system, varargin{:});
end


end

